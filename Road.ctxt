#BlueJ class context
comment0.target=Road
comment0.text=\r\n\ Models\ a\ road\r\n\ Roads\ connect\ two\ cities\ in\ one\ direction\ with\ a\ distance\r\n\ @author\ Jakob\ Sk\u00F8t\ Nielsen\ 202407223\r\n\ @author\ Daniel\ Dupont\ 202407440\r\n\ @version\ 06-11-2024\r\n\r\n
comment1.params=from\ to\ length
comment1.target=Road(City,\ City,\ int)
comment1.text=\r\n\ Creates\ a\ road\ object\r\n\ @param\ from\ \ \ City\ to\ start\ the\ road\ from\r\n\ @param\ to\ \ \ \ \ City\ to\ end\ the\ road\ in\r\n\ @param\ length\ Length\ of\ the\ road\r\n
comment2.params=
comment2.target=City\ getFrom()
comment2.text=\r\n\ Returns\ starting\ city\ of\ road\r\n\ @return\ starting\ city\r\n
comment3.params=
comment3.target=City\ getTo()
comment3.text=\r\n\ Returns\ destination\ city\ of\ road\r\n\ @return\ destination\ city\r\n
comment4.params=
comment4.target=int\ getLength()
comment4.text=\r\n\ Returns\ length\ of\ the\ road\r\n\ @return\ road\ length\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Creates\ a\ String\ representation\ of\ road\r\n\ @return\ String\ model\ of\ object\r\n
comment6.params=other
comment6.target=int\ compareTo(Road)
comment6.text=\r\n\ Compare\ two\ Road\ objects\r\n\ @param\ other\ \ Other\ object\ to\ compare\ against\r\n\ @return\ int\ based\ on\ comparisons\ in\ the\ following\ order\:\ starting\ city,\ ending\ city,\ length\r\n
comment7.params=
comment7.target=int\ hashCode()
comment7.text=\r\n\ Generate\ hash\ code\ based\ on\ starting\ city\ field\ and\ destination\ city\ field\ and\ prime\ numbers\r\n\ @return\ generated\ int\ hash\ code\r\n
comment8.params=obj
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\r\n\ Check\ if\ Object\ is\ equal\ to\ this\ based\ on\ starting\ city\ field,\ destination\ city\ field\ and\ length\ field\r\n\ @param\ obj\ \ \ \ Object\ to\ check\ if\ equal\ to\r\n\ @return\ true\ if\ objects\ are\ equal\r\n
numComments=9
